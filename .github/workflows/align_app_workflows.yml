name: Align App CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'align-app/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./align-app
      run: npm ci
    
    - name: Run ESLint
      working-directory: ./align-app
      run: npx eslint --fix src/
      continue-on-error: true
    
    - name: Run tests
      working-directory: ./align-app
      run: npm test -- --passWithNoTests
    
    - name: Build
      working-directory: ./align-app
      run: npm run build

  firebase-deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: 'align-app/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./align-app
      run: npm ci
    
    - name: Run ESLint
      working-directory: ./align-app
      run: npx eslint --fix src/
      continue-on-error: true
    
    - name: Build
      working-directory: ./align-app
      run: npm run build
    
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: align-800e4
        channelId: live
        entryPoint: './align-app'
